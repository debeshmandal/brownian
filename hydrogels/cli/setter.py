#!/usr/bin/env python
"""setter.py - auto-generated by softnanotools"""
import os
from pathlib import Path

from softnanotools.logger import Logger
logger = Logger(__name__)

def find_hydrogelsrc() -> Path:
    rc_path = os.environ.get(
        'HYDROGELSRC', Path(os.environ.get('HOME')) / '.hydrogelsrc'
    )

    rc_path = Path(rc_path)
    if not rc_path.exists():
        with open(rc_path, 'w') as f:
            f.write('# hydrogels settings\n\n')
            logger.info(f'Could not find .hydrogelsrc so created it at {rc_path}')
    return rc_path

def update(parameter: str, value: str):

    # get path for hydrogelsrc
    rc_path = find_hydrogelsrc()
    logger.info(f'Settings {parameter} to {value} in {rc_path}...')

    # flag changes to True if parameter is found
    flag = False

    # get data
    with open(rc_path, 'r') as f:
        data = f.read().split('\n')

    # iterate lines
    for i, line in enumerate(data):
        # handle comments and empty lines
        if len(line) == 0: continue
        if line[0] == '#': continue

        # find parameter
        if line.split('=')[0].strip() == parameter:

            flag = True
            data[i] = f"{parameter} = {value}\n"

    # if the value wasn't present, set it now
    if flag:
        data.append(f"{parameter} = {value}\n")
        flag = True

    # write to file
    with open(rc_path, 'w') as f:
        f.write('\n'.join(data))

    logger.info('Done!')


def main(parameter: str, value: str, **kwargs):
    update(parameter, value)
    return
